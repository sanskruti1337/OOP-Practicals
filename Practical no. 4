#include <iostream>
using namespace std;

class Complex {
public:
    float real, imag;

    void show() {
        cout << "Complex Number = " << real << " + j" << imag << endl;
    }

    Complex operator+(Complex c) {
        Complex temp;
        temp.real = real + c.real;
        temp.imag = imag + c.imag;
        return temp;
    }

    Complex operator*(Complex c) {
        Complex temp;
        temp.real = real * c.real - imag * c.imag;
        temp.imag = real * c.imag + imag * c.real;
        return temp;
    }

    friend istream& operator>>(istream& in, Complex& obj);
    friend ostream& operator<<(ostream& out, Complex& obj);
};

// input operator
istream& operator>>(istream& in, Complex& obj) {
    cout << "Enter real part: ";
    in >> obj.real;
    cout << "Enter imaginary part: ";
    in >> obj.imag;
    return in;
}

// output operator
ostream& operator<<(ostream& out, Complex& obj) {
    out << obj.real << " + " << obj.imag << "j";
    return out;
}

int main() {
    Complex c1, c2, sum, prod;

    cout << "Enter details of first complex number:\n";
    cin >> c1;

    cout << "Enter details of second complex number:\n";
    cin >> c2;

    sum = c1 + c2;
    prod = c1 * c2;

    cout << "\nAfter Addition: " << sum << endl;
    cout << "After Multiplication: " << prod << endl;

    return 0;
}

